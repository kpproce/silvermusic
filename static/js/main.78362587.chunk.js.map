{"version":3,"sources":["components/PDFViewerV1.js","components/SongDetails3Table.js","components/SongList3TableFilter.js","components/TestUpdateSongViaApi.js","components/SongDetailsModal.js","components/PlayListV2.js","components/PlayListTable.js","components/MessagesTest.js","components/HomeTMP.js","components/test.js","components/TestUpdate3.js","components/fotosBasic.js","components/VideoPlayer.js","components/BootstrapNavbar.js","App.js","serviceWorker.js","index.js"],"names":["PDFViewerV1","state","fileName","props","visible","file","process","numPages","this","setState","href","target","rel","download","Button","className","size","Component","SongDetails3","song","index","image1","split","pop","title","artist","video","music","music_alt","small","large","smallSrcSet","alt","pdf","afspraken","React","SongList3TableFilter","cachedSomeProp","filter","event","value","SongList","SongList1","item","includes","map","SongDetails3Table","SongList2","nextProps","prevState","someProp","api","axios","create","baseURL","TestUpdateSongViaApi","execAPIPost","a","id","result","post","res","status","data","console","log","modus","message","bron","page","imageName","onClick","SongDetailsModal","useState","show","setShow","setResponse","statusTekst","setStatusTekst","setTitle","setArtist","videoURL1","setVideoURL1","musicSheetURL1","setMusicSheetURL1","download1","setDownload1","handleSave","then","response","callBack","handleClose","variant","Modal","onHide","active","backdrop","Header","closeButton","Title","Body","Table","responsive","striped","bordered","hover","width","type","onChange","Footer","PlayListV2","childChanged","setChildChanged","setData","getData","fetch","json","useEffect","border","Messages","handleFetchRead1","isLoaded","items","handleRerender","rer","toLowerCase","showModal","e","handleChange","styles","homeContainer","height","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","content","backgroundColor","Home","style","Container","fluid","Row","xs","md","Col","lg","src","Test","count","setCount","TestUpdate3","fotoBasic","filenamePart","p1","substring","lastIndexOf","length","fileInclPath","CardGroup","JSONdata","ImageList","Card","Img","Text","VideoPlayer","controls","url","BootstrapNavbar","basename","Navbar","bg","sticky","Brand","Toggle","aria-controls","Collapse","Nav","to","NavDropdown","Item","as","Link","exact","path","component","PlayListTable","fotosBasic","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.78362587.chunk.js","sourcesContent":["// https://github.com/wojtekmaj/react-pdf/tree/master/sample\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nimport {FaDownload} from 'react-icons/fa';\r\n\r\nexport default class PDFViewerV1 extends Component {\r\n  state = {\r\n    fileName: this.props.fileName, \r\n    visible: this.props.visible,\r\n    file:  process.env.PUBLIC_URL + '/images/' + this.props.fileName,\r\n    //showViewer: this.props.showViewer,\r\n    //showDownload: this.props.showDownload,\r\n    numPages: null,\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      visible : !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { file, numPages } = this.state;\r\n    const fileLink=\"https://drive.google.com/file/d/1KtXzTp7NGWQWTTLbIxnpowzM8RRki1zT/view?usp=sharing\" \r\n    return (\r\n        <a href={file} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n          <Button>\r\n              <i className=\"fas fa-download\"/>\r\n              <FaDownload size=\"20\"/>\r\n          </Button>\r\n        </a>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ModalImage from \"react-modal-image\";\r\nimport PDFViewerV1 from './PDFViewerV1';\r\n\r\nclass SongDetails3 extends React.Component {\r\n  render () {\r\n    const  song = this.props.song\r\n    const index = this.props.index\r\n    var fileExtension = song.image1?song.image1.split('.').pop():\"noImage\"; //\"pdf\"\r\n    return (\r\n      <tr> \r\n        <td>\r\n          <tr>{song.title}</tr>\r\n          <tr> {song.artist}</tr>\r\n        </td>\r\n        <td className = \"linkColumn\">\r\n          <tr><a href ={song.video} target=\"_blank\" rel=\"noopener noreferrer\">video</a></tr>\r\n          {song.music?\r\n            <tr>\r\n              <a href ={song.music} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {song.music_alt? song.music_alt: \"Link naar chords\"}\r\n              </a>\r\n            </tr>\r\n            :\"\"  \r\n          } \r\n          {song.image1?\r\n            <tr>\r\n              <ModalImage \r\n                small={'/testreact/images/2020-09-06 drumstel in de nieuwe kast van Hans.jfif'}\r\n                large= {process.env.PUBLIC_URL + '/images/'+song.image1 }\r\n                smallSrcSet= \"300w\"\r\n                alt={ \"akkoorden \" + song.image1} \r\n              />\r\n            </tr>\r\n            :\"\"\r\n          }\r\n          {song.pdf ?\r\n            <tr> \r\n               {<PDFViewerV1 fileName={song.pdf} visible={false}/>} \r\n            </tr>\r\n            : \"\"\r\n          }\r\n        </td>\r\n        <td> {song.afspraken} </td> \r\n      </tr>) \r\n  } \r\n}\r\nexport default SongDetails3","import React from 'react';\r\nimport SongDetails3Table from './SongDetails3Table';\r\nimport SongList from '../data/songs2.json';\r\n\r\nimport './songList.css';\r\n\r\nclass SongList3TableFilter extends React.Component {\r\n\r\n// *****************************************\r\n\r\n// deze versie leest de data uit bestand songs.json en filtert deze via state.filter\r\n\r\n// *****************************************\r\nstate = {\r\n  cachedSomeProp: null,\r\n  filter: ''\r\n  // ... rest of initial state\r\n};\r\n\r\nstatic getDerivedStateFromProps(nextProps, prevState) {\r\n  // do things with nextProps.someProp and prevState.cachedSomeProp\r\n  return {\r\n    cachedSomeProp: nextProps.someProp,\r\n    // ... other derived state properties\r\n  };\r\n}\r\n\r\n\r\n//   filter: ''\r\n\r\nhandleChange(event) {\r\n  // hiermee zorg je er voor dat this.state.value actueel blijft en die zie je in de input\r\n  this.setState({filter: event.target.value});\r\n}\r\n   render () {\r\n    return ( \r\n    \t <div> \r\n        <h4>Playlist V1 Silvermusic (klik op de linkjes)</h4>  \r\n        {/*  <input type=\"text\" value={this.state.filter} onChange={(e) => this.handleChange(e)}/> */}\r\n        <table className=\"songlist\">\r\n           <tr> <th className=\"SLTH\">Song / artist </th> \r\n                <th className=\"SLTH\">afspraken</th> <th className=\"SLTH\"> Linkjes </th> \r\n          </tr>  \r\n         \r\n          {\r\n          SongList.SongList1.filter(item => item.artist.includes(this.state.filter)).map((item, index)=> {\r\n           // filter wordt niet gebruikt in deze pagina\r\n            return <SongDetails3Table song = {item} index = {index}/>\r\n          })\r\n        }\r\n        </table>\r\n        \r\n        <br/>\r\n\r\n        <table className=\"songlist\">\r\n           <tr> <th className=\"SLTH\">Voorgestelde songs / artist </th> \r\n                <th className=\"SLTH\">afspraken</th> \r\n                <th className=\"SLTH\"> Linkjes </th> \r\n          </tr>  \r\n         \r\n          {\r\n          SongList.SongList2.filter(item => item.artist.includes(this.state.filter)).map((item, index)=> {\r\n           // filter wordt niet gebruikt in deze pagina\r\n            return <SongDetails3Table song = {item} index = {index}/>\r\n          })\r\n\r\n        }\r\n        </table>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SongList3TableFilter","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Table, Col, Row, Button } from \"react-bootstrap\";\r\n\r\n\r\n// dit component krijgt data door voor een message. Dat maakt het mogelihk dit component te gebruiken voor een bestaande message of een nieuwe.\r\n// als een id wordt doorgegeven dan is het de bedoeling dat die id niet wordt aangepast, zodat een bestaande message wordt overschreven. \r\n\r\n    const api = axios.create({\r\n        // baseURL: 'http://localhost/php_api_test/apiBasic/writeMessage.php'\r\n        baseURL: 'http://localhost/php_api_test/apiBasic/updateSongInPlaylist.php'\r\n    })\r\n\r\nclass TestUpdateSongViaApi extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n        id: \"1\",\r\n        title: \"sultans of swing2\",\r\n        result: \"--\"\r\n    }\r\n    // alert (\"component JWT Constructor props: modus: \" + this.state.modus + \" imageName: \" + this.state['imageName']+ \" id\" + this.state['id'])\r\n    // alert(\"constr JWT: title: \" + this.state.title + \" -- imagename: \" + this.state.imageName +  \" props.lastItem['image'] :\" + props.lastItem['image'])\r\n  }\r\n  \r\n  \r\n  execAPIPost = async () => {\r\n    // sla de message op in de databsse (tabel messages)\r\n    // als een id al bestaat wordt deze verwijderd en deze nieuwee geplaatst\r\n\r\n    var { id, title, result} = this.state;\r\n    let res = await api.post('/',{\r\n      id: id,\r\n      title: title\r\n    })\r\n    if(res.status == 200){\r\n      this.setState({result: res.data} )\r\n      console.log(\" ------- UpdateSong via API AXIOS --------\");\r\n      console.log(res.data)\r\n      console.log(\" ------- EINDE   UpdateSong via API AXIOS --------\");\r\n    }    \r\n   \r\n    // result?this.setState({result:\"+\"+result+ \"+\"} ):this.setState({result: \"test niet gelukt\"} )\r\n    // alert(\"opslaan message: \\ntitle: \" + title + \" imageNeme: \" + imageName + \" via lastItem: \" + lastItem['image'] + \"  result:\" + res.data['message'])\r\n  \r\n  }\r\n\r\n    render () {\r\n        var { modus, id, title, message, bron , page , imageName, result} = this.state;\r\n        const titleText = modus==\"new\"? \"Nieuwe Message\": \"Wijzig Message \" + id; \r\n\r\n        return (\r\n          <>\r\n            <button onClick= {() =>  this.execAPIPost()}>\r\n              Click me 24\r\n            </button>\r\n            {result}\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TestUpdateSongViaApi","import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport { Modal, Table, Col, Row, Button} from \"react-bootstrap\";\r\nimport TestUpdateSongViaApi from './TestUpdateSongViaApi';\r\nimport { FaEdit} from 'react-icons/fa';\r\n\r\n\r\n//https://react-bootstrap.github.io/components/modal/\r\n\r\nconst api = axios.create({\r\n  //  baseURL: 'http://localhost/php_api_test/apiBasic/updateSongInPlaylist.php'\r\n  baseURL: 'https://silvermusic.nl/test/apiBasic/updateSongInPlaylist.php'\r\n})\r\n\r\nfunction SongDetailsModal(props) {\r\n    \r\n    const [show, setShow] = useState(false);\r\n \r\n\r\n    const [articleId, setArticleId] = useState(null);\r\n    \r\n    // const [id, setId] =  useState(1);\r\n    // const [title, setTitle] =  useState(\"this song\");\r\n    const [response, setResponse] = useState(null);\r\n    \r\n    const [statusTekst, setStatusTekst] = useState(\"niet aangepast\");\r\n  \r\n    const handleShow = () => setShow(true);\r\n    const [id, setID] = useState(props.song['id']);\r\n    const [title, setTitle] = useState(props.song['title']);\r\n    const [artist, setArtist] = useState(props.song['artist']);\r\n    const [videoURL1, setVideoURL1] = useState(props.song['videoURL1']);\r\n    const [musicSheetURL1, setMusicSheetURL1] = useState(props.song['musicSheetURL1']);\r\n    const [download1, setDownload1] = useState(props.song['download1']);\r\n\r\n    const song =  {id, title, artist, videoURL1, musicSheetURL1, download1} \r\n\r\n    const handleSave = () => {\r\n      setStatusTekst(\"op Save geklikt\")\r\n      // POST request using axios inside useEffect React hook\r\n      const url =\"http://localhost/php_api_test/apiBasic/updateSongInPlaylist.php\"\r\n      axios.post(url, song)\r\n          .then(response => setResponse(response.data))\r\n\r\n      // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n      props.callBack();\r\n    }\r\n\r\n    const handleClose = () => { \r\n      props.callBack();\r\n      setShow(false); \r\n    };\r\n\r\n    const handleSaveAndClose = () => { \r\n      handleSave();\r\n      handleClose(); \r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          <FaEdit size={20}/> {\" \"}\r\n         {/* // class=\"fas fa-pencil-alt fa-fw\" */}\r\n          <span className=\"small\"> {props.song['order1']} </span> \r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose} active=\"true\" backdrop={false}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.song['song']}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n             <Table responsive striped bordered=\"true\" hover size=\"sm\" >\r\n              <thead> \r\n                <tr><th width={'14%'}> item </th><th> waarde </th></tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td> id:</td><td>\r\n                    <input className= \"small\" type=\"text\"  \r\n                      value = {id} \r\n                     \r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td> titel:</td><td>\r\n                    <input className= \"small\" type=\"text\"  \r\n                      value = {song.title} \r\n                      onChange= {((event) => {setTitle(event.target.value)})}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td> artist:</td><td>\r\n                    <input className= \"small\" type=\"text\"  \r\n                      value = {song.artist}\r\n                      onChange= {((event) => {setArtist(event.target.value)})}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td> video1:</td><td>\r\n                    <input className= \"small width95\"  type=\"text\"  \r\n                      value = {song.videoURL1} \r\n                      onChange= {((event) => {setVideoURL1(event.target.value)})}\r\n                    />\r\n                  </td>\r\n                </tr> \r\n                <tr>\r\n                  <td> chords1:</td><td>\r\n                    <input className= \"small width95\" type=\"text\"  \r\n                      value = {song.musicSheetURL1} \r\n                      onChange= {((event) => {setMusicSheetURL1(event.target.value)})}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td> download1:</td><td>\r\n                    <input className= \"small width95\" type=\"text\"  \r\n                      value = {song.download1} \r\n                      onChange= {((event) => {setDownload1(event.target.value)})}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n              </Table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {statusTekst}\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Sluit\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSave}>\r\n              Opslaan\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSaveAndClose}>\r\n         \r\n              Sla op en sluit\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  } export default SongDetailsModal; ","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap';\r\nimport SongDetailsModal from './SongDetailsModal';\r\nimport PDFViewerV1 from './PDFViewerV1';\r\n\r\n\r\n// \"https://silvermusic.nl/test/apiBasic/read_playlist.php\"\r\n// \"http://localhost/php_api_test/apiBasic/read_playlist.php\"\r\n\r\n// $this->username = kimproce_root password = \"B4EjH9ANDbKW\"; */\r\n// Source staat op: D:\\xampp\\htdocs\\php_api_test\\apiBasic\r\n\r\nconst PlayListV2 = () => {\r\n\r\n  const [childChanged, setChildChanged] = useState(true)\r\n  const [data, setData] = useState(null)\r\n\r\n  const fetchURL = \"https://silvermusic.nl/test/apiBasic/read_playlist.php\"\r\n  // const fetchURL = \"http://localhost/php_api_test/apiBasic/read_playlist.php\"\r\n  \r\n  const getData = () =>\r\n    fetch(`${fetchURL}/posts`)\r\n      .then((res) => res.json()\r\n      )\r\n \r\n  function callBack() {    \r\n    setChildChanged(true);\r\n    // alert('test');\r\n    // getData();\r\n  } \r\n   \r\n  useEffect(() => {\r\n    getData()\r\n    .then((data) => setData(data))\r\n    .then (setChildChanged(false))\r\n    //.then(alert ('child changed'))\r\n  }, [childChanged])\r\n\r\n  return (\r\n    <table border=\"1\" className=\"songlist\">\r\n      {//  id\t  order1\t  title\t  artist\t  afspraken\t  videoURL1\t  musicSheetURL1\t  musicSheetURL2\t  image1\t  image2\r\n      }\r\n      <thead>\r\n        <tr>\r\n          <th className = 'SLTH'> Song   <button onClick ={ () => setChildChanged(true)}> refresh page</button></th> \r\n        </tr> \r\n      </thead>\r\n      <tbody>\r\n       \r\n      {data?.map((item,index) => \r\n        <tr>\r\n          <td>{item['title']} {item['artist']} <span className=\"small\"> {item['afspraken']} </span> <br/>\r\n          <SongDetailsModal callBack={getData} song={item}/>{\" \"} \r\n           {item['videoURL1']?\r\n            <a href={ item['videoURL1']} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                <Button>\r\n                  <i className=\"fas fa-download\"/>\r\n                  Video\r\n                </Button> \r\n                {\" \"} \r\n            </a>\r\n          :''\r\n          }\r\n\r\n          {item['videoURL2']?\r\n            <a href={ item['videoURL2']} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  <Button>\r\n                      <i className=\"fas fa-download\"/>\r\n                      Video(2)\r\n                  </Button>\r\n                  {\" \"} \r\n            </a>\r\n          :''\r\n          }\r\n\r\n          {item['musicSheetURL1']?\r\n            <a href={ item['musicSheetURL1']} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  <Button>\r\n                      <i className=\"fas fa-download\"/>\r\n                      Chords\r\n                  </Button>\r\n                  {\" \"} \r\n            </a>\r\n          :''\r\n          }\r\n\r\n          {item['musicSheetURL2']?\r\n            <a href={ item['musicSheetURL2']} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  <Button>\r\n                      <i className=\"fas fa-download\"/>\r\n                      Chords(2)\r\n                  </Button>\r\n                  {\" \"} \r\n            </a>\r\n          :''\r\n          }\r\n          {item['download1']?\r\n             <PDFViewerV1 fileName={item['download1']} visible={false}/>\r\n          :''\r\n          }\r\n          </td>     \r\n        </tr>\r\n      )\r\n      }\r\n       </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default PlayListV2;","import React, {useState, useEffect} from 'react';\r\n\r\nconst PlayListV2 = () => {\r\n  const [data, setData] = useState(null)\r\n  const fetchURL = \"http://localhost/php_api_test/apiBasic/read_playlist.php\"\r\n  const getData = () =>\r\n    fetch(`${fetchURL}/posts`)\r\n      .then((res) => res.json())\r\n\r\n  useEffect(() => {\r\n    getData().then((data) => setData(data))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    <h1>Dit scherm is voor de beheerder</h1>\r\n    <h3>http://localhost/php_api_test/apiBasic/read_playlist.php</h3>\r\n    <h3>http://silvermusic.nl/test/apiBasic/read_playlist.php</h3>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default PlayListV2;","import React from 'react';\r\nimport './songList.css';\r\n\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// ----- MESSAGES dit is het component om messages om en om te laten zien\r\n\r\nclass Messages extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isLoaded: false,\r\n      rer: \"leeg\",\r\n      items: [],\r\n      filter: '',\r\n    }\r\n  }\r\n\r\n  // This is the best place to make API calls since, at this point, \r\n  // the component has been mounted and is available to the DOM.\r\n\r\n  componentDidMount() {\r\n    //fetch('https://jsonplaceholder.typicode.com/users')\r\n    this.handleFetchRead1();\r\n  }\r\n\r\n  handleFetchRead1 = () => {\r\n    // fetch('http://localhost/php_api_test/apiBasic/read1.php?filter=message')\r\n    fetch('http://www.silvermusic.nl/test/apiBasic/read1.php')\r\n    .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ \r\n          isLoaded: true,\r\n          items: json\r\n        },\r\n        console.log(this.setState.items)\r\n        )\r\n      })\r\n  }\r\n\r\n  handleChange(event) {\r\n    // hiermee zorg je er voor dat this.state.value actueel blijft en die zie je in de input\r\n    this.setState(\r\n      {filter: event.target.value.toLowerCase()},\r\n    );\r\n  }\r\n\r\n  handleRerender = () => {\r\n    \r\n    // this.setState({rer: \"gewijzigd\"}, function() {alert(\"Messages zijn verouderd open messages opnieuw via menu--> messages\")} );\r\n     // setTimeout(function() { this.forceUpdate();} .bind(this), 10) \r\n     // setTimeout(function() {this.forceUpdate()} .bind(this), 1000)\r\n     this.handleFetchRead1();\r\n  }\r\n\r\n  render () {\r\n    \r\n    var { isLoaded, rer, items, showModal } = this.state;\r\n    \r\n    if (!isLoaded) {\r\n      return <div>Loading .... </div>\r\n    } \r\n    else {\r\n      return (\r\n        <>  \r\n          Filter messages: <input type=\"text\" value={this.state.filter} onChange={(e) => this.handleChange(e)}/><br/>\r\n          {\r\n            items.filter(item => (item.title.toLowerCase().includes(this.state.filter) || item.id.toLowerCase().includes(this.state.filter))).map((item, index)=> {\r\n              return (  \r\n                <>\r\n                {item['title']}   {item['message']} \r\n                <br/>  <br/>\r\n                </>\r\n               )\r\n            })\r\n          }\r\n        </>\r\n      )\r\n    } \r\n  }\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport './basis.css';\r\n\r\nconst styles = {\r\n    homeContainer: {\r\n        height: 1356,\r\n               \r\n        backgroundImage: `url(${\"/testreact/images/2020-09-10 Eerste oefensessie overzicht.jfif\"})`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover'\r\n    },\r\n\r\n    content: {\r\n      \r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundColor: 'rgba(250, 250, 250, 0.8)',\r\n    }\r\n};\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n  \r\n  render () {\r\n    return (\r\n      <div style={styles.homeContainer}>\r\n        <Container style={styles.content} fluid=\"md\">\r\n            <Row xs={1} md={1}  className=\"row\">\r\n              <h1>Silvermusic <span className=\"xSmall\"> V1.01 </span>  </h1>\r\n            </Row>\r\n\r\n            <Row xs={1} md={1}  className=\"row\">\r\n             <h3>Muzikale Verbinding in Zilverkamp Huissen </h3>\r\n            </Row>\r\n          \r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={6} lg={7} className=\"col\">        \r\n                <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/Kranten arrtikel Silvermusic okt 2020.jpg'} alt=\"Kranten arrtikel Silvermusic okt 2020.jpg\" />\r\n              </Col>  \r\n              <Col xs={12} md={6} lg={5} className=\"col\">        \r\n                <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/2020-09-10 Eerste oefensessie overzicht.jfif'} alt=\"Eerste oefensessie overzicht.jfif\"/>\r\n\r\n                <h5>\r\n                  <a href=\"https://kpproce.github.io/testreact/#/lijst\" > <h4> Onze playlist</h4> </a>\r\n                </h5>\r\n                <br/>\r\n                <a href=\"https://kpproce.github.io/testreact/#/player\" > <h4> Videos oefensessies</h4> </a>\r\n                <br/>\r\n                <a href=\"https://kpproce.github.io/testreact/#/fotosBasic\"> <h4> Onze foto's </h4> </a> \r\n              </Col>\r\n              \r\n            \r\n            </Row>\r\n\r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={9} lg={10} className=\"col\">      Onze \r\n                <h4> Ben je geinteresseerd: neem dan contact op met Hans Vos via email: jhjmvos@gmail.com</h4>\r\n              </Col>\r\n              <Col xs={6} md={3} lg={2} className=\"col\">        \r\n              <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/2020-09-10 Hans on percussion.jfif'} alt=\"2020-09-10 Hans on percussion\" />\r\n              </Col>  \r\n            </Row>\r\n\r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={9} lg={10} className=\"col\">      \r\n                <h4> <a href=\"https://kpproce.github.io/testreact/#/fotosBasic\" > <h3> Klik hier voor wat foto's</h3> </a> </h4>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n      </div>\r\n   )\r\n  }\r\n}\r\n\r\nexport default Home  ","import React, { useState } from 'react';\r\n\r\nfunction Test() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n} export default Test; ","import React, { useState, useEffect } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction TestUpdate3() {\r\n    const [response, setResponse] = useState(null);\r\n    const [id, setId] =  useState(1);\r\n    const [title, setTitle] =  useState(\"this song\");\r\n\r\n\r\n    const [song, setSong] =  useState([id, title]);\r\n\r\n    const handleSave = () => {\r\n    \r\n      // POST request using axios inside useEffect React hook\r\n      const url =\"http://localhost/php_api_test/apiBasic/updateSongInPlaylist.php\"\r\n      axios.post(url, { id: id, title: title})\r\n          .then(response => setResponse(response.data))\r\n\r\n      // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n  }\r\n\r\n    useEffect(() => {\r\n    \r\n       \r\n      \r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            <h5 className=\"card-header\">POST Request with React Hooks</h5>\r\n            Song titel: <span> </span>\r\n            <input className= \"small\" type=\"text\"  \r\n                      value = {title}\r\n                      onChange= {((event) => {setTitle(event.target.value)})}\r\n            />\r\n            <Button variant=\"secondary\" onClick={handleSave}>Save</Button>\r\n\r\n            <div className=\"card-body\">\r\n                response: {response}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport  default TestUpdate3 ;","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport JSONdata from '../data/songs2.json';\r\nimport './songList.css';\r\n\r\nclass fotoBasic extends React.Component {\r\n\r\n  filenamePart = (p1) => {\r\n    return p1.substring(p1.lastIndexOf(\"/\")+1, p1.length-p1.lastIndexOf(\"/\"))\r\n  }\r\n  \r\n  fileInclPath = (p1) => {\r\n    return \"../images/\" + p1.substring(p1.lastIndexOf(\"/\")+1, p1.length-p1.lastIndexOf(\"/\"))\r\n  }\r\n// *****************************************\r\nrender () {\r\n  \r\n  return (\r\n    <>\r\n    <CardGroup>\r\n      { JSONdata.ImageList.map((item)=> \r\n        <Card className=\"minWidth3\">\r\n          <Card.Img variant=\"bottom\" src={process.env.PUBLIC_URL + '/images/'+this.filenamePart(item.imageName) } />\r\n          <Card.Body>\r\n            <Card.Title></Card.Title>\r\n          <Card.Text>\r\n             {this.filenamePart(item.imageName)}<br/>\r\n             </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n       </CardGroup>\r\n    </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default fotoBasic \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport SongList from '../data/songs2.json';\r\nimport './songList.css';\r\n\r\nimport ReactPlayer from 'react-player'\r\n\r\nclass VideoPlayer extends React.Component {\r\n\r\n// *****************************************\r\n   render () {\r\n    return (\r\n       <>\r\n       <h2>Eerste oefensessie</h2>\r\n       <ReactPlayer width=\"95%\" controls= \"true\" url='https://youtu.be/2e5feNT_7yE' />\r\n       <h2>Voorbeeld van onze zusterclub uit Arnhem</h2>\r\n       <ReactPlayer width=\"95%\" controls= \"true\" url='https://youtu.be/DBOx_61h_NE' />\r\n       </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoPlayer","import React from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route, Link\r\n  } from \"react-router-dom\";\r\n  import { Navbar,Nav,NavDropdown} from 'react-bootstrap'\r\n  import SongList3TableFilter from './SongList3TableFilter';\r\n  import PlayListV2 from './PlayListV2';\r\n  import PlayListTable from './PlayListTable';\r\n  import SongDetailsModal from './SongDetailsModal';\r\n  import Messages from './MessagesTest';\r\n  import Home from './HomeTMP';\r\n  import Test from './test';\r\n  import TestUpdateSongViaApi from './TestUpdateSongViaApi';\r\n  import TestUpdate3 from './TestUpdate3';\r\n  import fotosBasic from './fotosBasic';\r\n  import VideoPlayer from './VideoPlayer';\r\n  import './basis.css';\r\n\r\n  \r\n  //const Home = () => <div><h2>Home page</h2></div>\r\n\r\nclass BootstrapNavbar extends React.Component{\r\n    handleRerender = () => {\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Router basename='/'>\r\n                            <Navbar bg=\"dark\" variant=\"dark\" /*expand=\"lg\"*/ sticky=\"top\">\r\n                                <span className=\"menuWebsiteName\"> Silvermusic Huissen v1.1</span>  \r\n                                <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\"> \r\n                                        <Link className=\"nav-link\" to='/home'>Home</Link>\r\n                                        <Link className=\"nav-link\" to='/lijst'>Playlist</Link>\r\n                                        <Link className=\"nav-link\" to='/fotosBasic'>Fotos</Link>      \r\n                                        <Link className=\"nav-link\" to='/player'>Videos</Link>\r\n                                        <NavDropdown title=\"Overig\" id=\"basic-nav-dropdown\">\r\n                                            <NavDropdown.Item as={Link} to='/playlistV2'> PlayList V2 (test)</NavDropdown.Item>\r\n                                            <NavDropdown.Item as={Link} to='/player'> Video vb</NavDropdown.Item> \r\n                                            <NavDropdown.Item as={Link} to='/SongDetailsModal'> Song details modal (test)</NavDropdown.Item> \r\n                                            <NavDropdown.Item as={Link} to='/playlistTable'> PlaylistTabel (test)</NavDropdown.Item> \r\n                                            <NavDropdown.Item as={Link} to='/test'>test</NavDropdown.Item> \r\n                                            <NavDropdown.Item as={Link} to='/testUpdate2'>testUpdate2</NavDropdown.Item> \r\n                                            <NavDropdown.Item as={Link} to='/testUpdate3'>TestUpdate3</NavDropdown.Item> \r\n                                            <Link className=\"nav-link\" to='/playlistTable' >PlaylistTabel (test)</Link>\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                            <br />\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Home} />          \r\n                                <Route path=\"/lijst\" component={SongList3TableFilter} />     \r\n                                <Route path=\"/playlistV2\" component={PlayListV2} />   \r\n                                <Route path=\"/playlistTable\" component={PlayListTable} />                                \r\n                                <Route path=\"/messages\" component={Messages} />       \r\n                                <Route path=\"/fotosBasic\" component={fotosBasic} />       \r\n                                <Route path=\"/songdetailsModal\" component={SongDetailsModal} />     \r\n                                <Route path=\"/home\" component={Home} />  \r\n                                <Route path=\"/player\" component={VideoPlayer} /> \r\n                                <Route path=\"/test\" component={Test} /> \r\n                                <Route path=\"/testUpdate2\" component={TestUpdateSongViaApi} /> \r\n                                <Route path=\"/testUpdate3\" component={TestUpdate3} /> \r\n\r\n                                {/* <Route path=\"/lijst\">   <SongList3TableFilter/> </Route>\r\n                                <Route path=\"/player\">  <VideoPlayer/>  </Route> */}\r\n                            </Switch>\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default BootstrapNavbar;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapNavbar from './components/BootstrapNavbar';\nimport './App.css';\n\nfunction App() {\n  return (\n      <>\n        <div>\n          <BootstrapNavbar/>\n        </div>  \n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}