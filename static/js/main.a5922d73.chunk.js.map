{"version":3,"sources":["components/SongDetails3Table.js","components/SongList3TableFilter.js","components/MessagesTest.js","components/HomeTMP.js","components/fotosBasic.js","components/VideoPlayer.js","components/BootstrapNavbar.js","App.js","serviceWorker.js","index.js"],"names":["SongDetails3","song","this","props","index","title","artist","className","href","video","target","music","image1","small","large","process","smallSrcSet","alt","afspraken","React","Component","SongList3TableFilter","state","filter","event","setState","value","SongList","SongList1","item","includes","map","SongDetails3Table","SongList2","Messages","handleFetchRead1","fetch","then","res","json","isLoaded","items","console","log","handleRerender","rer","toLowerCase","showModal","type","onChange","e","handleChange","id","styles","homeContainer","height","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","content","width","backgroundColor","Home","style","Container","fluid","Row","xs","md","Col","lg","src","fotoBasic","filenamePart","p1","substring","lastIndexOf","length","fileInclPath","CardGroup","JSONdata","ImageList","Card","Img","variant","imageName","Body","Title","Text","VideoPlayer","controls","url","BootstrapNavbar","basename","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","path","component","fotosBasic","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5922d73.chunk.js","sourcesContent":["import React from 'react';\r\nimport ModalImage from \"react-modal-image\";\r\n\r\nclass SongDetails3 extends React.Component {\r\n  render () {\r\n    const  song = this.props.song\r\n    const index = this.props.index\r\n    return (\r\n      <tr> \r\n        <td> \r\n          <tr>{song.title}</tr> \r\n          <tr> {song.artist} </tr> \r\n        </td>  \r\n        <td className = \"linkColumn\">\r\n          <tr> <a href ={song.video} target=\"_blank\" >video</a> </tr>\r\n          {song.music?\r\n            <tr> <a href ={song.music} target=\"_blank\" >akkoorden</a></tr>\r\n            : \"\" \r\n          } \r\n          {song.image1?\r\n            <tr>\r\n              <ModalImage\r\n                small={'/testreact/images/2020-09-06 drumstel in de nieuwe kast van Hans.jfif'}\r\n                large= {process.env.PUBLIC_URL + '/images/'+song.image1 }\r\n                smallSrcSet= \"300w\"\r\n                alt={ \"akkoorden \" + song.image1} \r\n              />\r\n            </tr>\r\n          : \"\"}\r\n        </td>\r\n        <td> {song.afspraken} </td> \r\n      </tr>) \r\n  } \r\n}\r\nexport default SongDetails3","import React from 'react';\r\nimport SongDetails3Table from './SongDetails3Table';\r\nimport SongList from '../data/songs2.json';\r\n\r\nimport './songList.css';\r\n\r\nclass SongList3TableFilter extends React.Component {\r\n\r\n// *****************************************\r\n\r\n// deze versie leest de data uit bestand songs.json en filtert deze via state.filter\r\n\r\n// *****************************************\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     filter: ''\r\n    } \r\n  }\r\n\r\nhandleChange(event) {\r\n  // hiermee zorg je er voor dat this.state.value actueel blijft en die zie je in de input\r\n  this.setState({filter: event.target.value});\r\n}\r\n   render () {\r\n    return ( \r\n    \t <div> \r\n        <h4>Playlist Silvermusic (klik op de linkjes)</h4>  \r\n{/*         <input type=\"text\" value={this.state.filter} onChange={(e) => this.handleChange(e)}/> */}\r\n        <table className=\"songlist\">\r\n           <tr> <th className=\"SLTH\">Song / artist </th> \r\n                <th className=\"SLTH\">afspraken</th> <th className=\"SLTH\"> Linkjes </th> \r\n          </tr>  \r\n         \r\n          {\r\n          SongList.SongList1.filter(item => item.artist.includes(this.state.filter)).map((item, index)=> {\r\n           // filter wordt niet gebruikt in deze pagina\r\n            return <SongDetails3Table song = {item} index = {index}/>\r\n          })\r\n          \r\n        }\r\n        </table>\r\n        \r\n        <br/>\r\n\r\n        <table className=\"songlist\">\r\n           <tr> <th className=\"SLTH\">Voorgestelde songs / artist </th> \r\n                <th className=\"SLTH\">afspraken</th> <th className=\"SLTH\"> Linkjes </th> \r\n          </tr>  \r\n         \r\n          {\r\n          SongList.SongList2.filter(item => item.artist.includes(this.state.filter)).map((item, index)=> {\r\n           // filter wordt niet gebruikt in deze pagina\r\n            return <SongDetails3Table song = {item} index = {index}/>\r\n          })\r\n          \r\n        }\r\n        </table>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SongList3TableFilter","import React from 'react';\r\nimport './songList.css';\r\n\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// ----- MESSAGES dit is het component om messages om en om te laten zien\r\n\r\nclass Messages extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isLoaded: false,\r\n      rer: \"leeg\",\r\n      items: [],\r\n      filter: '',\r\n    }\r\n  }\r\n\r\n  // This is the best place to make API calls since, at this point, \r\n  // the component has been mounted and is available to the DOM.\r\n\r\n  componentDidMount() {\r\n    //fetch('https://jsonplaceholder.typicode.com/users')\r\n    this.handleFetchRead1();\r\n  }\r\n\r\n  handleFetchRead1 = () => {\r\n    // fetch('http://localhost/php_api_test/apiBasic/read1.php?filter=message')\r\n    fetch('http://www.silvermusic.nl/test/apiBasic/read1.php')\r\n    .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ \r\n          isLoaded: true,\r\n          items: json\r\n        },\r\n        console.log(this.setState.items)\r\n        )\r\n      })\r\n  }\r\n\r\n  handleChange(event) {\r\n    // hiermee zorg je er voor dat this.state.value actueel blijft en die zie je in de input\r\n    this.setState(\r\n      {filter: event.target.value.toLowerCase()},\r\n    );\r\n  }\r\n\r\n  handleRerender = () => {\r\n    \r\n    // this.setState({rer: \"gewijzigd\"}, function() {alert(\"Messages zijn verouderd open messages opnieuw via menu--> messages\")} );\r\n     // setTimeout(function() { this.forceUpdate();} .bind(this), 10) \r\n     // setTimeout(function() {this.forceUpdate()} .bind(this), 1000)\r\n     this.handleFetchRead1();\r\n  }\r\n\r\n  render () {\r\n    \r\n    var { isLoaded, rer, items, showModal } = this.state;\r\n    \r\n    if (!isLoaded) {\r\n      return <div>Loading .... </div>\r\n    } \r\n    else {\r\n      return (\r\n        <>  \r\n          Filter messages: <input type=\"text\" value={this.state.filter} onChange={(e) => this.handleChange(e)}/><br/>\r\n          {\r\n            items.filter(item => (item.title.toLowerCase().includes(this.state.filter) || item.id.toLowerCase().includes(this.state.filter))).map((item, index)=> {\r\n              return (  \r\n                <>\r\n                {item['title']}   {item['message']} \r\n                <br/>  <br/>\r\n                </>\r\n               )\r\n            })\r\n          }\r\n        </>\r\n      )\r\n    } \r\n  }\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport './basis.css';\r\n\r\nconst styles = {\r\n    homeContainer: {\r\n        height: 1356,\r\n               \r\n        backgroundImage: `url(${\"/testreact/images/2020-09-10 Eerste oefensessie overzicht.jfif\"})`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover'\r\n    },\r\n\r\n    content: {\r\n      \r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundColor: 'rgba(250, 250, 250, 0.8)',\r\n    }\r\n};\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n  \r\n  render () {\r\n    return (\r\n      <div style={styles.homeContainer}>\r\n        <Container style={styles.content} fluid=\"md\">\r\n            <Row xs={1} md={1}  className=\"row\">\r\n              <h1>Silvermusic <span className=\"xSmall\"> V1.01 </span>  </h1>\r\n            </Row>\r\n\r\n            <Row xs={1} md={1}  className=\"row\">\r\n             <h3>Muzikale Verbinding in Zilverkamp Huissen </h3>\r\n            </Row>\r\n          \r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={6} lg={7} className=\"col\">        \r\n                <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/Kranten arrtikel Silvermusic okt 2020.jpg'} />\r\n              </Col>  \r\n              <Col xs={12} md={6} lg={5} className=\"col\">        \r\n                <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/2020-09-10 Eerste oefensessie overzicht.jfif'} />\r\n\r\n                <h5>\r\n                  <a href=\"https://kpproce.github.io/testreact/#/lijst\" > <h4> Onze playlist</h4> </a>\r\n                </h5>\r\n                <br/>\r\n                <a href=\"https://kpproce.github.io/testreact/#/player\" > <h4> Videos oefensessies</h4> </a>\r\n                <br/>\r\n                <a href=\"https://kpproce.github.io/testreact/#/fotosBasic\"> <h4> Onze foto's </h4> </a> \r\n              </Col>\r\n              \r\n            \r\n            </Row>\r\n\r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={9} lg={10} className=\"col\">      Onze \r\n                <h4> Ben je geinteresseerd: neem dan contact op met Hans Vos via email: jhjmvos@gmail.com</h4>\r\n              </Col>\r\n              <Col xs={6} md={3} lg={2} className=\"col\">        \r\n              <img width=\"100%\" src={process.env.PUBLIC_URL + '/images/2020-09-10 Hans on percussion.jfif'} />\r\n              </Col>  \r\n            </Row>\r\n\r\n            <Row xs={1} md={2} className=\"row\">\r\n              <Col xs={12} md={9} lg={10} className=\"col\">      \r\n                <h4> <a href=\"https://kpproce.github.io/testreact/#/fotosBasic\" > <h3> Klik hier voor wat foto's</h3> </a> </h4>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n      </div>\r\n   )\r\n  }\r\n}\r\n\r\nexport default Home  ","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport JSONdata from '../data/songs2.json';\r\nimport './songList.css';\r\n\r\nclass fotoBasic extends React.Component {\r\n\r\n  filenamePart = (p1) => {\r\n    return p1.substring(p1.lastIndexOf(\"/\")+1, p1.length-p1.lastIndexOf(\"/\"))\r\n  }\r\n  \r\n  fileInclPath = (p1) => {\r\n    return \"../images/\" + p1.substring(p1.lastIndexOf(\"/\")+1, p1.length-p1.lastIndexOf(\"/\"))\r\n  }\r\n// *****************************************\r\nrender () {\r\n  \r\n  return (\r\n    <>\r\n    <CardGroup>\r\n      { JSONdata.ImageList.map((item)=> \r\n        <Card className=\"minWidth3\">\r\n          <Card.Img variant=\"bottom\" src={process.env.PUBLIC_URL + '/images/'+this.filenamePart(item.imageName) } />\r\n          <Card.Body>\r\n            <Card.Title></Card.Title>\r\n          <Card.Text>\r\n             {this.filenamePart(item.imageName)}<br/>\r\n             </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n       </CardGroup>\r\n    </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default fotoBasic \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport SongList from '../data/songs2.json';\r\nimport './songList.css';\r\n\r\nimport ReactPlayer from 'react-player'\r\n\r\nclass VideoPlayer extends React.Component {\r\n\r\n// *****************************************\r\n   render () {\r\n    return (\r\n       <>\r\n       <h2>Eerste oefensessie</h2>\r\n       <ReactPlayer width=\"95%\" controls= \"true\" url='https://youtu.be/2e5feNT_7yE' />\r\n       <h2>Voorbeeld van onze zusterclub uit Arnhem</h2>\r\n       <ReactPlayer width=\"95%\" controls= \"true\" url='https://youtu.be/DBOx_61h_NE' />\r\n       </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoPlayer","import React from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route, Link\r\n  } from \"react-router-dom\";\r\n  import { Navbar,Nav} from 'react-bootstrap'\r\n  import SongList3TableFilter from './SongList3TableFilter';\r\n  import Messages from './MessagesTest';\r\n  import Home from './HomeTMP';\r\n  import fotosBasic from './fotosBasic';\r\n  import VideoPlayer from './VideoPlayer';\r\n  import './basis.css';\r\n  \r\n  //const Home = () => <div><h2>Home page</h2></div>\r\n\r\nclass BootstrapNavbar extends React.Component{\r\n    handleRerender = () => {\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Router basename='/'>\r\n                            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" sticky=\"top\">\r\n                                <span className=\"menuWebsiteName\"> Silvermusic Huissen </span>\r\n                                <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\"> \r\n                                        <Link className=\"nav-link\" to='/Home' >Home</Link>\r\n                                        <Link className=\"nav-link\" to='/lijst' >Playlist</Link>\r\n                                        {/* <Link className=\"nav-link\" to='/messages'>messages</Link> */}\r\n                                        <Link className=\"nav-link\" to='/fotosBasic'>fotos</Link>\r\n                                        <Link className=\"nav-link\" to='/player'>Video vb</Link>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                            <br />\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Home} />          \r\n                                <Route path=\"/lijst\" component={SongList3TableFilter} />                                \r\n                                <Route path=\"/messages\" component={Messages} />       \r\n                                <Route path=\"/fotosBasic\" component={fotosBasic} />       \r\n                                <Route path=\"/home\" component={Home} />     \r\n                                <Route path=\"/player\" component={VideoPlayer} />       \r\n                                {/* <Route path=\"/lijst\">   <SongList3TableFilter/> </Route>\r\n                                <Route path=\"/player\">  <VideoPlayer/>  </Route> */}\r\n                            </Switch>\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default BootstrapNavbar;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapNavbar from './components/BootstrapNavbar';\nimport './App.css';\n\nfunction App() {\n  return (\n      <>\n        <div>\n          <BootstrapNavbar/>\n        </div>  \n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}